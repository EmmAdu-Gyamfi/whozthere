@page "/deletetenant/{id:int}"
@using Newtonsoft.Json
<PageTitle>/deletetenant</PageTitle>
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject HttpClient Http

<div>
    <p class="text-xl font-bold text-gray-900 dark:text-gray-900 ml-[50px]">Deleting details for @person.Othernames @person.Lastname</p>


    <div class="flex items-start">

        <EditForm Model="@person" OnValidSubmit="@RemoveTenant">
            <div class="grid grid-cols-2 gap-9 m-5">
                <div class="flex">
                    <a href="#" class="bg-gray-300 focus:ring-4 focus:outline-none focus:ring-gray-300 text-white rounded-lg flex  items-center justify-center px-3 py-2.5 dark:bg-gray-300  dark:focus:ring-gray-300">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-door-closed-fill" color="#1b2c3f" viewBox="0 0 16 16">
                            <path d="M12 1a1 1 0 0 1 1 1v13h1.5a.5.5 0 0 1 0 1h-13a.5.5 0 0 1 0-1H3V2a1 1 0 0 1 1-1zm-2 9a1 1 0 1 0 0-2 1 1 0 0 0 0 2" />
                        </svg>
                    </a>

                    <div class="col mt-[-5px]">
                        <p class="text-lg font-semibold text-gray-900 dark:text-[#000000] ml-[20px]">Room Number</p>
                        <p class="text-xs font-normal text-gray-900 dark:text-[#000000] ml-[20px]">@person.HouseNumber</p>
                    </div>

                </div>

                <div class="flex">
                    <a href="#" class="bg-gray-300 focus:ring-4 focus:outline-none focus:ring-gray-300 text-white rounded-lg inline-flex items-center justify-center px-3 py-2.5 dark:bg-gray-300  dark:focus:ring-gray-300">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" color="#1b2c3f" class="bi bi-telephone-fill" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M1.885.511a1.745 1.745 0 0 1 2.61.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.68.68 0 0 0 .178.643l2.457 2.457a.68.68 0 0 0 .644.178l2.189-.547a1.75 1.75 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.6 18.6 0 0 1-7.01-4.42 18.6 18.6 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877z" />
                        </svg>

                    </a>

                    <div class="col mt-[-5px]">
                        <p class="text-lg font-semibold text-gray-900 dark:text-[#000000] ml-[20px]">Phone Number</p>
                        <p class="text-xs font-normal text-gray-900 dark:text-[#000000] ml-[20px]">@person.PhoneNumber</p>
                    </div>

                </div>

                <div class="flex">
                    <a href="#" class="bg-gray-300 focus:ring-4 focus:outline-none focus:ring-gray-300 text-white rounded-lg inline-flex items-center justify-center px-3 py-2.5 dark:bg-gray-300  dark:focus:ring-gray-300">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" color="#1b2c3f" class="bi bi-envelope-fill" viewBox="0 0 16 16">
                            <path d="M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414zM0 4.697v7.104l5.803-3.558zM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586zm3.436-.586L16 11.801V4.697z" />
                        </svg>



                    </a>

                    <div class="col mt-[-5px]">
                        <p class="text-lg font-semibold text-gray-900 dark:text-[#000000] ml-[20px]">Email</p>
                        <p class="text-xs font-normal text-gray-900 dark:text-[#000000] ml-[20px]">@person.Email</p>
                    </div>

                </div>
                <div class="flex">

                    <a href="#" class="bg-gray-300 focus:ring-4 focus:outline-none focus:ring-gray-300 text-white rounded-lg inline-flex items-center justify-center px-3 py-2.5 dark:bg-gray-300  dark:focus:ring-gray-300">
                        <svg xmlns="http://www.w3.org/2000/svg" width="17" height="17" fill="currentColor" color="#1b2c3f" class="bi bi-calendar-event-fill" viewBox="0 0 16 16">
                            <path d="M4 .5a.5.5 0 0 0-1 0V1H2a2 2 0 0 0-2 2v1h16V3a2 2 0 0 0-2-2h-1V.5a.5.5 0 0 0-1 0V1H4zM16 14V5H0v9a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2m-3.5-7h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5" />
                        </svg>
                    </a>

                    <div class="col mt-[-5px]">
                        <p class="text-lg font-semibold text-gray-900 dark:text-[#000000] ml-[20px]">Date of Birth</p>
                        <p class="text-xs font-normal text-gray-900 dark:text-[#000000] ml-[20px]">@person.DoB</p>
                    </div>
                </div>

                <div class="flex">

                    <a href="#" class="bg-gray-300 focus:ring-4 focus:outline-none focus:ring-gray-300 text-white rounded-lg inline-flex items-center justify-center px-3 py-2.5 dark:bg-gray-300  dark:focus:ring-gray-300">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" color="#1b2c3f" class="bi bi-gender-ambiguous" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M11.5 1a.5.5 0 0 1 0-1h4a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0V1.707l-3.45 3.45A4 4 0 0 1 8.5 10.97V13H10a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0V14H6a.5.5 0 0 1 0-1h1.5v-2.03a4 4 0 1 1 3.471-6.648L14.293 1zm-.997 4.346a3 3 0 1 0-5.006 3.309 3 3 0 0 0 5.006-3.31z" />
                        </svg>
                    </a>

                    <div class="col mt-[-5px]">
                        <p class="text-lg font-semibold text-[#000000] dark:text-[#000000] ml-[20px]">Gender</p>
                        <p class="text-xs font-normal text-[#000000] dark:text-[#000000] ml-[20px]">@person.Gender</p>
                    </div>
                </div>


            </div>

            <div class="ml-[50px]">
                <button type="submit" class="mr-[10px] text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center">
                    Delete
                </button>

                <a href="/">
                    <button type="button" value="Back to List" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Back to List</button>

                </a>
            </div>

        </EditForm>
    </div>



    <div class="flex mt-[20px]">


        <div id="popup-modal" tabindex="-1" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
            <div class="relative p-4 w-full max-w-md max-h-full">
                <div class="relative bg-white rounded-lg shadow dark:bg-white">
                    <button type="button" class="absolute top-3 end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-200 dark:hover:text-gray-900" data-modal-hide="popup-modal">
                        <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                        </svg>
                        <span class="sr-only">Close modal</span>
                    </button>
                    <div class="p-4 md:p-5 text-center">
                        <svg class="mx-auto mb-4 text-gray-400 w-12 h-12 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                        </svg>
                        <h3 class="mb-5 text-lg font-normal text-gray-500 dark:text-gray-500">Are you sure about this?</h3>
                        <form asp-action="Delete" class="inline-flex">
                            <button data-modal-hide="popup-modal" type="submit" class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center">
                                Yes, Proceed
                            </button>
                        </form>
                        <button data-modal-hide="popup-modal" type="button" class="py-2.5 px-5 ms-3 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-100 dark:bg-white dark:text-gray-900 dark:border-gray-200 dark:hover:text-blue-700 dark:hover:bg-gray-100">No, cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>






@code {
    private Person person = new Person();

    [Parameter]
    public int id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        person = await LoadPerson();
    }

    public async Task<Person> LoadPerson()
    {
        HttpResponseMessage responseMessage = await Http.GetAsync($"api/person/{id}");

        if (responseMessage.StatusCode == System.Net.HttpStatusCode.OK)
        {
            var responseData = responseMessage.Content.ReadAsStringAsync().Result;

            var decentralizedPerson = JsonConvert.DeserializeObject<Person>(responseData);

            return decentralizedPerson;

        }
        else
        {
            return new Person();
        }
    }

    private async Task RemoveTenant()
    {
        try
        {
            var data = new Person
                {
                    PersonId = id,
                    DoB = person.DoB,
                    Email = person.Email,
                    Gender = person.Gender,
                    HouseNumber = person.HouseNumber,
                    Lastname = person.Lastname,
                    Othernames = person.Othernames,
                    PhoneNumber = person.PhoneNumber,


                };
            var response = await Http.DeleteAsync($"api/person/{id}");
            if (response.IsSuccessStatusCode)
            {
                // Handle success (e.g., navigate to another page or show a success message)
                NavigationManager.NavigateTo("/");

                Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomCenter;

                Snackbar.Add("Tenant Deleted Successfully", Severity.Success);
            }
            else
            {
                // Handle error (e.g., show an error message)
            }
        }
        catch (Exception ex)
        {
            // Handle exception (e.g., show an error message)
        }
    }


}
